class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n=nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        for(int i=0;i<n-3;i++){
            if(i==0 || (i<n && nums[i]!=nums[i-1])){
                int a=target-nums[i];
                for(int j=i+1;j<n-2;j++){
                    if(j==i+1 || (j<n && nums[j]!=nums[j-1])){
                        int b=a-nums[j];
                        int low=j+1,high=n-1;
                        while(low<high){
                            if(nums[low]+nums[high]==b){
                                vector<int>temp;
                                temp.push_back(nums[i]);
                                temp.push_back(nums[j]);
                                temp.push_back(nums[low]);
                                temp.push_back(nums[high]);
                                ans.push_back(temp);
                                
                                while(low<high && nums[low]==nums[low+1])low++;
                                while(low<high && nums[high]==nums[high-1])high--;
                                low++;high--;
                            }
                            else if(nums[low]+nums[high]>b)high--;
                            else low++;
                        }
                    }
                }
            }
        }
        return ans;
    }
};
