class Solution {
public:
    //do see inversion count
    //https://www.codingninjas.com/codestudio/problems/615?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website&leftPanelTab=1
    
    int merge(vector<int>& nums,int low,int mid,int high){
        int i,j=mid+1;//i starting of left subaaray and j second
        int count=0;
        for(i=low;i<=mid;i++){
            while(j<=high && nums[i]>((long long)2*nums[j])){//2 ka aaga long long laga ka ossa long long type bana diya bcoz jab multipy kara toh long long ma store hojai overflow na ho
                j++;
            }
            count+=j-(mid+1);//starting of right sa j tak ka elements
        }
        //now we have counted lets merge
        vector<int>temp;
        int l=low,r=mid+1;
        while(l<=mid && r<=high){
            if(nums[l]<nums[r]){
                temp.push_back(nums[l++]);
            }
               else{
                   temp.push_back(nums[r++]);
               }
        }
        while(l<=mid){
            temp.push_back(nums[l++]);
        }
        while(r<=high){
            temp.push_back(nums[r++]);
        }
        int k=0;
        for(i=low;i<=high;i++){
          nums[i]=temp[k++];
        }
        return count;       
    }
    
    int mergesort(vector<int>& nums,int low,int high){
      if(low>=high)return 0;
        int mid=(low+high)/2;
        int count=0;
        count+=mergesort(nums,low,mid);
        count+=mergesort(nums,mid+1,high);
        
        count+=merge(nums,low,mid,high);
        return count;
    }
    
    int reversePairs(vector<int>& nums) {
        return mergesort(nums,0,nums.size()-1);
    }
};
