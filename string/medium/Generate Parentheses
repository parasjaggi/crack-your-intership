class Solution {
public:
    void f(int n,vector<string>&v,int open,int close,string s){
        if(open==n && close==n)return;
        if(open==n){
            while(close<n){
                s+=')';
                close++;
            }
            v.push_back(s);
            return;
        }
        if(open>close){
            s+='(';
            f(n,v,open+1,close,s);
            s.pop_back();
            s+=')';
            f(n,v,open,close+1,s); 
        }
        else{
             s+='(';
             f(n,v,open+1,close,s);
        }
    }
    vector<string> generateParenthesis(int n) {
        vector<string>v;
        string s="";
        f(n,v,0,0,s);
        return v;
    }
};
